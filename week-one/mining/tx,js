const SHA256 = require('crypto-js/sha256');
const TARGET_DIFFICULTY = BigInt(0x0fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);
const MAX_TRANSACTIONS = 10;

const mempool = [];
const blocks = [];
let transactions = [];

function addTransaction(transaction) {
    mempool.push(transaction);
}

function mine() {

     //get mempool length
    let elementsNr = mempool.length;

    for (let i = 0; i < elementsNr; i++){
        //load transaction and remove mempool
        transactions.push(mempool.pop());    

        //add blocks only if MAX_TRANSACTIONS reached or mempool is empty
        if(transactions.length == MAX_TRANSACTIONS || transactions.length == elementsNr)
        {
            //hash block 
            var block = JSON.stringify({id : blocks.length});
            let blockHashed = SHA256(block);

            //mine 
            blocks.push({hash : blockHashed, transactions : transactions});
            
            //reset 
            transactions = [];
            elementsNr = mempool.length;
        }
    }

}

module.exports = {
    TARGET_DIFFICULTY,
    MAX_TRANSACTIONS,
    addTransaction, 
    mine, 
    blocks,
    mempool
};